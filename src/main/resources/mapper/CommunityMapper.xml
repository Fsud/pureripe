<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fankun.pureRipe.dao.CommunityMapper" >
    <resultMap id="PostMap" type="com.fankun.pureRipe.entity.Post">
        <id column="post_id" property="postId" jdbcType="DECIMAL" />
        <result column="user_id" property="userId" jdbcType="DECIMAL" />
        <result column="subject" property="subject" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="countr" property="replyCount" jdbcType="DECIMAL" />
    </resultMap>

    <resultMap id="ReplyMap" type="com.fankun.pureRipe.entity.Reply">
        <id column="reply_id" property="replyId" jdbcType="DECIMAL" />
        <result column="post_id" property="postId" jdbcType="DECIMAL" />
        <result column="user_id" property="userId" jdbcType="DECIMAL" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
        <result column="user_name" property="replyUserName" jdbcType="VARCHAR" />
    </resultMap>
    
    <insert id="insertSubject">
        insert into post_main (user_id,subject,content,add_time,update_time,status)
        values (#{userId,jdbcType=DECIMAL},#{subject,jdbcType=VARCHAR}
        ,#{content,jdbcType=VARCHAR},now(),now(),#{status,jdbcType=VARCHAR})
    </insert>

    <select id="listSubjects" resultMap="PostMap">
      select
      g.*,
       case
        when r2.add_time > g.update_time then r2.add_time
        else  g.update_time
      end as sort_time
      from
      (select m.post_id,m.subject,m.update_time,max(reply_id)  mr,count(reply_id) countr
      from post_main m left join post_reply r on status = 0 and m.post_id = r.post_id
      group by m.post_id order by m.update_time desc)g
      left join post_reply r2
      on
      r2.reply_id = g.mr
      order by sort_time desc
    </select>
    
    <select id="getSubject" resultMap="PostMap">
        select * from post_main where status = 0 and post_id = #{postId,jdbcType=DECIMAL}
    </select>
    
    <update id="updateSubject" parameterType="com.fankun.pureRipe.entity.Post">
        update post_main set subject = #{subject,jdbcType=VARCHAR} ,content = #{content,jdbcType=VARCHAR},update_time = now()
        where post_id = #{postId,jdbcType=DECIMAL}
    </update>

    <insert id="insertReply" parameterType="com.fankun.pureRipe.entity.Reply">
        insert into post_reply (post_id,user_id,content,add_time) values
         (#{postId,jdbcType=DECIMAL},#{userId,jdbcType=DECIMAL},#{content,jdbcType=VARCHAR},now())
    </insert>

    <select id="getRepliesByPostId" resultMap="ReplyMap">
      select r.user_id,r.add_time,r.content,u.user_name from post_reply r,user_main u where r.user_id = u.user_id and post_id = #{postId,jdbcType=DECIMAL} order by add_time
    </select>
    
    <select id="countSubject" resultType="java.lang.Long">
        select count(1) from post_main where status = 0
    </select>
</mapper>